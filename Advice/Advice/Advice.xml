<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Advice</name>
    </assembly>
    <members>
        <!-- Badly formed XML comment ignored for member "T:Advice.Controllers.AccountsController" -->
        <member name="M:Advice.Controllers.AccountsController.#ctor(AdviceLib.IRepository.IRepositoryAccounts{AdviceLib.Models.Accounts1})">
            <summary>
            contstructor for Accounts Controller
            </summary>
            <param name="Acc"></param>
        </member>
        <member name="M:Advice.Controllers.AccountsController.Get">
            <summary>
            return all elements in Account
            </summary>
            <returns></returns>
        </member>
        <member name="M:Advice.Controllers.AccountsController.Get(System.Int32)">
            <summary>
            Get account by id
            /// </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Advice.Controllers.AccountsController.Post(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            Insert new Account
            </summary>
            <param name="FNAME"></param>
            <param name="LNAME"></param>
            <param name="PASSWORD"></param>
            <param name="ACCESS_LEVEL"></param>
            <param name="EMAIL"></param>
            <param name="PHONE"></param>
            <param name="USERNAME"></param>
            <param name="DEPT_ID"></param>
        </member>
        <member name="M:Advice.Controllers.AccountsController.Put(System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="fname"></param>
            <param name="lname"></param>
            <param name="password"></param>
            <param name="access_level"></param>
            <param name="email"></param>
            <param name="phone"></param>
            <param name="username"></param>
            <param name="dept_id"></param>
        </member>
        <member name="M:Advice.Controllers.AccountsController.Delete(System.Int32)">
            <summary>
            Delete account by id
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Advice.Controllers.ConversationsController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Advice.Controllers.ConversationsController.#ctor(AdviceLib.IRepository.IRepositoryConversations{AdviceLib.Models.Conversations1})">
            <summary>
            contstructor for Conversations Controller
            </summary>
            <param name="CONV"></param>
        </member>
        <member name="M:Advice.Controllers.ConversationsController.Get">
            <summary>
            return all elements in Conversation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Advice.Controllers.ConversationsController.Get(System.Int32)">
            <summary>
            Get Conversation by id
            /// </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Advice.Controllers.ConversationsController.Post(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="AccountId"></param>
            <param name="ConversationType"></param>
            <param name="AccessLevel"></param>
        </member>
        <member name="M:Advice.Controllers.ConversationsController.Put(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="AccountId"></param>
            <param name="ConversationType"></param>
            <param name="AccessLevel"></param>
        </member>
        <member name="M:Advice.Controllers.ConversationsController.Delete(System.Int32)">
            <summary>
            Delete Conversation by id
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Advice.Controllers.DepartmentsController">
            <summary>
            Departments controller Class   /// </summary>
        </member>
        <member name="M:Advice.Controllers.DepartmentsController.#ctor(AdviceLib.IRepository.IRepositoryDepartments{AdviceLib.Models.Departments1})">
            <summary>
            contstructor for Department Controller
            </summary>
            <param name="DEPT"></param>
        </member>
        <member name="M:Advice.Controllers.DepartmentsController.Get">
            <summary>
            get all Departments
            </summary>
            <returns></returns>
        </member>
        <member name="M:Advice.Controllers.DepartmentsController.Get(System.Int32)">
            <summary>
            get Departments by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Advice.Controllers.DepartmentsController.Post(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="DepName"></param>
            <param name="DepAccess"></param>
        </member>
        <member name="M:Advice.Controllers.DepartmentsController.Put(System.Int32,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="depName"></param>
            <param name="depAccess"></param>
        </member>
        <member name="M:Advice.Controllers.DepartmentsController.Delete(System.Int32)">
            <summary>
            delete Departments by id
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Advice.Controllers.MessagesController">
            <summary>
            Message Controller Class  /// </summary>
        </member>
        <member name="M:Advice.Controllers.MessagesController.#ctor(AdviceLib.IRepository.IRepositoryMessages{AdviceLib.Models.Messages1})">
            <summary>
            contstructor for Accounts Controller
            </summary>
            <param name="Acc"></param>
        </member>
        <member name="M:Advice.Controllers.MessagesController.Get">
            <summary>
            return all Messages        /// </summary>
            <returns></returns>
        </member>
        <member name="M:Advice.Controllers.MessagesController.Get(System.Int32)">
            <summary>
            return Message by id        /// </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Advice.Controllers.MessagesController.Post(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.Byte[],System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="Conversation_ID"></param>
            <param name="DeptID"></param>
            <param name="AccountID"></param>
            <param name="DateMade"></param>
            <param name="Message"></param>
            <param name="Type"></param>
            <param name="FileLocation"></param>
            <param name="keyWords"></param>
            <param name="Upvotes"></param>
            <param name="Views"></param>
            <param name="ReadAccess"></param>
            <param name="WriteAccess"></param>
        </member>
        <member name="M:Advice.Controllers.MessagesController.Put(System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.Byte[],System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="Conversation_ID"></param>
            <param name="DeptID"></param>
            <param name="AccountID"></param>
            <param name="DateMade"></param>
            <param name="Message"></param>
            <param name="Type"></param>
            <param name="FileLocation"></param>
            <param name="keyWords"></param>
            <param name="Upvotes"></param>
            <param name="Views"></param>
            <param name="ReadAccess"></param>
            <param name="WriteAccess"></param>
        </member>
        <member name="M:Advice.Controllers.MessagesController.Delete(System.Int32)">
            <summary>
            delete answer by id
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Advice.Program">
            <summary>
            
            </summary>
        </member>
        <member name="M:Advice.Program.Main(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Advice.Program.CreateHostBuilder(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Advice.Startup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Advice.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="F:Advice.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:Advice.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Advice.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
